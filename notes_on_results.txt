####################### THREE-WAY CLASSIFICATION ############################
starting grid search using prompts...
Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (1.0, 0.5, 0.1, 0.01),
 'clf__loss': ('huber', 'log', 'modified_huber', 'squared_hinge'),
 'clf__n_iter': (5, 10, 50, 100),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.05, 0.1),
 'vect__stop_words': ('english', None)}
Fitting 8 folds for each of 3072 candidates, totalling 24576 fits
[Parallel(n_jobs=-1)]: Done 348 tasks      | elapsed:    2.1s
[Parallel(n_jobs=-1)]: Done 1848 tasks      | elapsed:   10.7s
[Parallel(n_jobs=-1)]: Done 4348 tasks      | elapsed:   24.8s
[Parallel(n_jobs=-1)]: Done 7848 tasks      | elapsed:   44.1s
[Parallel(n_jobs=-1)]: Done 12348 tasks      | elapsed:  1.1min
[Parallel(n_jobs=-1)]: Done 17848 tasks      | elapsed:  1.7min
[Parallel(n_jobs=-1)]: Done 24348 tasks      | elapsed:  2.3min
[Parallel(n_jobs=-1)]: Done 24576 out of 24576 | elapsed:  2.3min finished
done in 140.179s

Best score: 0.833
Best parameters set:
	clf__alpha: 0.01
	clf__loss: 'log'
	clf__n_iter: 100
	tfidf__use_idf: False
	vect__max_df: 1.0
	vect__min_df: 0.05
	vect__stop_words: None


starting grid search using prompts...
Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (1.0, 0.5, 0.1, 0.01),
 'clf__n_iter': (5, 10, 50, 100),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.05, 0.1),
 'vect__stop_words': ('english', None)}
Fitting 8 folds for each of 768 candidates, totalling 6144 fits
[Parallel(n_jobs=-1)]: Done 348 tasks      | elapsed:    1.9s
[Parallel(n_jobs=-1)]: Done 1848 tasks      | elapsed:   10.2s
[Parallel(n_jobs=-1)]: Done 4348 tasks      | elapsed:   23.4s
[Parallel(n_jobs=-1)]: Done 6144 out of 6144 | elapsed:   32.8s finished
done in 33.435s

Best score: 0.812
Best parameters set:
	clf__alpha: 0.01
	clf__n_iter: 10
	tfidf__use_idf: False
	vect__max_df: 1.0
	vect__min_df: 0.1
	vect__stop_words: None

loading spacy...
starting grid search using prompts...
Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (1.0, 0.5, 0.1, 0.01),
 'clf__n_iter': (5, 10, 50),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.05, 0.1),
 'vect__stop_words': ('english', None)}
Fitting 3 folds for each of 576 candidates, totalling 1728 fits
[Parallel(n_jobs=-1)]: Done 540 tasks      | elapsed:    3.0s
[Parallel(n_jobs=-1)]: Done 1728 out of 1728 | elapsed:    8.8s finished
done in 9.663s

Best score: 0.771
Best parameters set:
	clf__alpha: 0.1
	clf__n_iter: 50
	tfidf__use_idf: False
	vect__max_df: 1.0
	vect__min_df: 0.05
	vect__stop_words: None

################### GROUP VS SEQUENCING - PROMPTS ALONE #######################

loading spacy...
starting grid search using prompts...
Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (1.0, 0.5, 0.1, 0.01),
 'clf__n_iter': (5, 10, 50),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.05, 0.1),
 'vect__stop_words': ('english', None)}
Fitting 3 folds for each of 576 candidates, totalling 1728 fits
[Parallel(n_jobs=-1)]: Done 484 tasks      | elapsed:    2.2s
[Parallel(n_jobs=-1)]: Done 1728 out of 1728 | elapsed:    7.2s finished
done in 7.756s

Best score: 0.938
Best parameters set:
	clf__alpha: 0.01
	clf__n_iter: 5
	tfidf__use_idf: True
	vect__max_df: 0.7
	vect__min_df: 0.0
	vect__stop_words: None

GROUP VS SEQUENCING - PROMPTS ALONE

Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (0.5, 0.1, 0.01, 0.001),
 'clf__n_iter': (5, 10),
 'tfidf__norm': ('l1', 'l2'),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.03, 0.05, 0.1),
 'vect__ngram_range': ((1, 1), (1, 2)),
 'vect__stop_words': ('english', None)}
Fitting 3 folds for each of 1536 candidates, totalling 4608 fits
[Parallel(n_jobs=-1)]: Done 456 tasks      | elapsed:    2.5s
[Parallel(n_jobs=-1)]: Done 2856 tasks      | elapsed:   14.0s
[Parallel(n_jobs=-1)]: Done 4608 out of 4608 | elapsed:   22.2s finished
done in 22.466s

Best score: 0.938
Best parameters set:
	clf__alpha: 0.5
	clf__n_iter: 5
	tfidf__norm: 'l2'
	tfidf__use_idf: False
	vect__max_df: 0.5
	vect__min_df: 0.0
	vect__ngram_range: (1, 1)
	vect__stop_words: None

##################### GROUP VS SEQUENCING - RULES ALONE ####################

Performing grid search...
pipeline: ['vect', 'tfidf', 'clf']
parameters:
{'clf__alpha': (1.0, 0.5, 0.1, 0.01),
 'clf__n_iter': (5, 10, 50, 100),
 'tfidf__use_idf': (True, False),
 'vect__max_df': (0.3, 0.5, 0.7, 1.0),
 'vect__min_df': (0.0, 0.05, 0.1),
 'vect__stop_words': ('english', None)}
Fitting 8 folds for each of 768 candidates, totalling 6144 fits
[Parallel(n_jobs=-1)]: Done 348 tasks      | elapsed:    1.8s
[Parallel(n_jobs=-1)]: Done 1848 tasks      | elapsed:    9.5s
[Parallel(n_jobs=-1)]: Done 4348 tasks      | elapsed:   22.0s
[Parallel(n_jobs=-1)]: Done 6144 out of 6144 | elapsed:   30.9s finished
done in 31.486s

Best score: 0.729 THREE-WAY
Best parameters set:
	clf__alpha: 0.5
	clf__n_iter: 10
	tfidf__use_idf: True
	vect__max_df: 0.3
	vect__min_df: 0.05
	vect__stop_words: None

  parameters:
  {'clf__alpha': (0.5, 0.1, 0.01, 0.001),
   'clf__n_iter': (5, 10),
   'tfidf__norm': ('l1', 'l2'),
   'tfidf__use_idf': (True, False),
   'vect__max_df': (0.3, 0.5, 0.7, 1.0),
   'vect__min_df': (0.0, 0.05, 0.1),
   'vect__ngram_range': ((1, 1), (1, 2)),
   'vect__stop_words': ('english', None)}
  Fitting 3 folds for each of 1536 candidates, totalling 4608 fits
  [Parallel(n_jobs=-1)]: Done 484 tasks      | elapsed:    2.5s
  [Parallel(n_jobs=-1)]: Done 2584 tasks      | elapsed:   12.7s
  [Parallel(n_jobs=-1)]: Done 4608 out of 4608 | elapsed:   22.1s finished
  done in 22.353s

  Best score: 0.906
  Best parameters set:
  	clf__alpha: 0.5
  	clf__n_iter: 5
  	tfidf__norm: 'l1'
  	tfidf__use_idf: True
  	vect__max_df: 0.7
  	vect__min_df: 0.1
  	vect__ngram_range: (1, 1)
  	vect__stop_words: None
